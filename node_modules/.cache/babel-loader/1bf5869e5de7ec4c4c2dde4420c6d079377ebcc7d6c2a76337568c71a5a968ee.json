{"ast":null,"code":"var _jsxFileName = \"/home/aike/Development/aboutMe/src/components/DiscordActivity.tsx\",\n  _s = $RefreshSig$();\nimport \"../styles/discordActivity.css\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { fetchLanyard } from \"../hooks/useLanyard\";\nimport { resolveActivityImage, resolveEmojiUrl, formatTimeDisplay } from \"../utils/discordUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DiscordActivity() {\n  _s();\n  var _data$spotify2, _data$spotify2$timest, _code$assets, _dsSpotify$timestamps, _dsSpotify$timestamps2, _obsidian$assets;\n  const [data, setData] = useState(null);\n  const [tick, setTick] = useState(0);\n  const [timer, setTimer] = useState(0);\n  const lastFetchTime = useRef(Date.now());\n  const fetchData = async () => {\n    try {\n      const json = await fetchLanyard();\n      setData(json.data);\n      lastFetchTime.current = Date.now();\n    } catch (error) {\n      console.error(\"Error fetching Discord activity:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    const timer = setInterval(() => {\n      var _data$spotify, _data$spotify$timesta;\n      setTick(prev => prev + 1);\n      if (data !== null && data !== void 0 && (_data$spotify = data.spotify) !== null && _data$spotify !== void 0 && (_data$spotify$timesta = _data$spotify.timestamps) !== null && _data$spotify$timesta !== void 0 && _data$spotify$timesta.end) {\n        const now = Date.now();\n        // once start time of the music reaches the end, refetchs\n        if (now > data.spotify.timestamps.end + 3000) {\n          fetchData();\n        }\n\n        // refetching each 30s?? idk\n        if (now - lastFetchTime.current > 30000) {\n          fetchData();\n        }\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [data === null || data === void 0 ? void 0 : (_data$spotify2 = data.spotify) === null || _data$spotify2 === void 0 ? void 0 : (_data$spotify2$timest = _data$spotify2.timestamps) === null || _data$spotify2$timest === void 0 ? void 0 : _data$spotify2$timest.end]);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando presencia...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 21\n  }, this);\n\n  // ! General Variables & Helpers\n\n  function formatMusicTime(start, end) {\n    if (!start || !end) return {\n      current: \"0:00\",\n      total: \"0:00\",\n      progress: 0\n    };\n    const now = Date.now();\n    const totalDuration = end - start;\n    const currentPosition = now - start;\n    const progress = Math.min(Math.max(currentPosition / totalDuration * 100, 0), 100);\n    return {\n      current: formatTimeDisplay(start, now),\n      total: formatTimeDisplay(start, end),\n      progress\n    };\n  }\n  const dsStatus = data.discord_status;\n  const dsSpotify = data.spotify;\n  const dsActivites = data.activities;\n  const custom = data.activities.find(a => a.type === 4);\n  const emojiUrl = resolveEmojiUrl(custom === null || custom === void 0 ? void 0 : custom.emoji);\n  const statusText = custom.state;\n\n  // ! Visual Studio Code Variables\n  const code = data.activities.find(a => a.name === \"Visual Studio Code\");\n  const appId = code === null || code === void 0 ? void 0 : code.application_id;\n  const largeImg = resolveActivityImage(appId, code === null || code === void 0 ? void 0 : (_code$assets = code.assets) === null || _code$assets === void 0 ? void 0 : _code$assets.large_image);\n\n  // ! Spotify Variables\n  const albumArt = dsSpotify.album_art_url;\n  const musicTime = formatMusicTime(dsSpotify === null || dsSpotify === void 0 ? void 0 : (_dsSpotify$timestamps = dsSpotify.timestamps) === null || _dsSpotify$timestamps === void 0 ? void 0 : _dsSpotify$timestamps.start, dsSpotify === null || dsSpotify === void 0 ? void 0 : (_dsSpotify$timestamps2 = dsSpotify.timestamps) === null || _dsSpotify$timestamps2 === void 0 ? void 0 : _dsSpotify$timestamps2.end);\n\n  // ! Obsidian Variables\n\n  const obsidian = dsActivites.find(dsActivites => dsActivites.name === \"Obsidian\");\n  const obsidianAppId = obsidian === null || obsidian === void 0 ? void 0 : obsidian.application_id;\n  const obsidianLogo = resolveActivityImage(obsidianAppId, obsidian === null || obsidian === void 0 ? void 0 : (_obsidian$assets = obsidian.assets) === null || _obsidian$assets === void 0 ? void 0 : _obsidian$assets.large_image);\n\n  // se que, obsidian y VSCODE no pueden estar al mismo tiempo, siempre pueden ser 2, 1 o 0 actividades. solamente\n  // se intercambia entre que esta o no presente spotify,\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ds-activity ${dsStatus} discord-container`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://open.spotify.com/track/${dsSpotify.track_id}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"activity-image\",\n            src: albumArt,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), (emojiUrl || statusText) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emote\",\n          children: [statusText && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `status-text-${emojiUrl ? \"emoji\" : \"normal\"}`,\n            children: statusText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), emojiUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: emojiUrl,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activity-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://open.spotify.com/track/${dsSpotify.track_id}`,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"activity-detail\",\n            children: dsSpotify.song\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"activity-state\",\n          children: dsSpotify.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"activity-time\",\n          children: [musicTime.current, \" / \", musicTime.total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), dsSpotify ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-track\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${musicTime.progress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(DiscordActivity, \"9sXkIAscM93OL9kFTKCfDsFYyT4=\");\n_c = DiscordActivity;\nexport default DiscordActivity;\nvar _c;\n$RefreshReg$(_c, \"DiscordActivity\");","map":{"version":3,"names":["useEffect","useState","useRef","fetchLanyard","resolveActivityImage","resolveEmojiUrl","formatTimeDisplay","jsxDEV","_jsxDEV","DiscordActivity","_s","_data$spotify2","_data$spotify2$timest","_code$assets","_dsSpotify$timestamps","_dsSpotify$timestamps2","_obsidian$assets","data","setData","tick","setTick","timer","setTimer","lastFetchTime","Date","now","fetchData","json","current","error","console","setInterval","_data$spotify","_data$spotify$timesta","prev","spotify","timestamps","end","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","formatMusicTime","start","total","progress","totalDuration","currentPosition","Math","min","max","dsStatus","discord_status","dsSpotify","dsActivites","activities","custom","find","a","type","emojiUrl","emoji","statusText","state","code","name","appId","application_id","largeImg","assets","large_image","albumArt","album_art_url","musicTime","obsidian","obsidianAppId","obsidianLogo","className","href","track_id","src","alt","song","artist","style","width","_c","$RefreshReg$"],"sources":["/home/aike/Development/aboutMe/src/components/DiscordActivity.tsx"],"sourcesContent":["import \"../styles/discordActivity.css\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { fetchLanyard } from \"../hooks/useLanyard\";\nimport {\n  resolveActivityImage,\n  resolveEmojiUrl,\n  formatTimeDisplay,\n  formatMusicTime,\n} from \"../utils/discordUtils\";\n\nexport function DiscordActivity() {\n  const [data, setData] = useState<any | null>(null);\n  const [tick, setTick] = useState(0);\n  const [timer, setTimer] = useState(0);\n  const lastFetchTime = useRef<number>(Date.now());\n\n  const fetchData = async () => {\n    try {\n      const json = await fetchLanyard();\n      setData(json.data);\n      lastFetchTime.current = Date.now();\n    } catch (error) {\n      console.error(\"Error fetching Discord activity:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n\n    const timer = setInterval(() => {\n      setTick((prev) => prev + 1);\n      if (data?.spotify?.timestamps?.end) {\n        const now = Date.now();\n        // once start time of the music reaches the end, refetchs\n        if (now > data.spotify.timestamps.end + 3000) {\n          fetchData();\n        }\n\n        // refetching each 30s?? idk\n        if (now - lastFetchTime.current > 30000) {\n          fetchData();\n        }\n      }\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [data?.spotify?.timestamps?.end]);\n\n  if (!data) return <p>Cargando presencia...</p>;\n\n  // ! General Variables & Helpers\n\n  interface Activity {\n    name: string;\n    [key: string]: any;\n  }\n\n  interface SpotifyData {\n    [key: string]: any;\n  }\n\n  interface LanyardData {\n    discord_status: string;\n    spotify: SpotifyData | null;\n    data: {\n      activities: Activity[];\n    };\n  }\n\n  function formatMusicTime(\n    start?: number,\n    end?: number\n  ): { current: string; total: string; progress: number } {\n    if (!start || !end) return { current: \"0:00\", total: \"0:00\", progress: 0 };\n\n    const now = Date.now();\n    const totalDuration = end - start;\n    const currentPosition = now - start;\n\n    const progress = Math.min(\n      Math.max((currentPosition / totalDuration) * 100, 0),\n      100\n    );\n\n    return {\n      current: formatTimeDisplay(start, now),\n      total: formatTimeDisplay(start, end),\n      progress,\n    };\n  }\n\n  const dsStatus = data.discord_status;\n  const dsSpotify = data.spotify;\n  const dsActivites = data.activities;\n  const custom = data.activities.find((a: any) => a.type === 4);\n  const emojiUrl = resolveEmojiUrl(custom?.emoji);\n  const statusText = custom.state;\n\n  // ! Visual Studio Code Variables\n  const code = data.activities.find(\n    (a: any) => a.name === \"Visual Studio Code\"\n  );\n  const appId = code?.application_id;\n  const largeImg = resolveActivityImage(appId, code?.assets?.large_image);\n\n  // ! Spotify Variables\n  const albumArt = dsSpotify.album_art_url;\n  const musicTime = formatMusicTime(\n    dsSpotify?.timestamps?.start,\n    dsSpotify?.timestamps?.end\n  );\n\n  // ! Obsidian Variables\n\n  const obsidian = dsActivites.find(\n    (dsActivites: Activity) => dsActivites.name === \"Obsidian\"\n  );\n  const obsidianAppId = obsidian?.application_id;\n  const obsidianLogo = resolveActivityImage(\n    obsidianAppId,\n    obsidian?.assets?.large_image\n  );\n\n  // se que, obsidian y VSCODE no pueden estar al mismo tiempo, siempre pueden ser 2, 1 o 0 actividades. solamente\n  // se intercambia entre que esta o no presente spotify,\n  return (\n    <div className={`ds-activity ${dsStatus} discord-container`}>\n      <div className=\"activity\">\n        <div className=\"album-container\">\n          <a href={`https://open.spotify.com/track/${dsSpotify.track_id}`}>\n            <img className=\"activity-image\" src={albumArt} alt=\"\"></img>\n          </a>\n          {(emojiUrl || statusText) && (\n            <div className=\"emote\">\n              {statusText && (\n                <p className={`status-text-${emojiUrl ? \"emoji\" : \"normal\"}`}>\n                  {statusText}\n                </p>\n              )}\n              {emojiUrl && <img src={emojiUrl} alt=\"\"></img>}\n            </div>\n          )}\n        </div>\n        <div className=\"activity-container\">\n          <a href={`https://open.spotify.com/track/${dsSpotify.track_id}`}>\n            <h3 className=\"activity-detail\">{dsSpotify.song}</h3>\n          </a>\n          <h4 className=\"activity-state\">{dsSpotify.artist}</h4>\n          <span className=\"activity-time\">\n            {musicTime.current} / {musicTime.total}\n          </span>\n          {dsSpotify ? (\n            <div className=\"progress-bar\">\n              <div className=\"progress-track\">\n                <div\n                  className=\"progress-fill\"\n                  style={{ width: `${musicTime.progress}%` }}\n                ></div>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      {/* \n      \n      <div>\n        <div className=\"ds-activity code\">\n          <img\n            className=\"activity-image\"\n            src={largeImg || undefined}\n            alt={code?.details}\n          />\n          <h3>{code?.details}</h3>\n          <h6>{code?.state}</h6>\n          <h4>{code?.assets?.large_text}</h4>\n          <time>{formatTimeDisplay(code?.timestamps?.start)}</time>\n        </div>\n        <div className=\"ds-activity code\">\n          <img\n            className=\"activity-image\"\n            src={obsidianLogo || undefined}\n            alt={code?.details}\n          />\n          <h3>{obsidian?.state}</h3>\n          <h6>{obsidian?.details}</h6>\n          <time>{formatTimeDisplay(obsidian?.timestamps?.start)}</time>\n        </div>\n      </div>\n      */}\n      {/* add where im active*/}\n    </div>\n  );\n}\n\nexport default DiscordActivity;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}