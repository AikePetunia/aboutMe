{"ast":null,"code":"var _jsxFileName = \"/home/aike/Development/aboutMe/src/components/DiscordActivity.tsx\",\n  _s = $RefreshSig$();\nimport \"../styles/discordActivity.css\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { fetchLanyard } from \"../hooks/useLanyard\";\nimport { resolveActivityImage, resolveEmojiUrl, formatTimeDisplay, formatMusicTime } from \"../utils/discordUtils\";\nimport { Spotify } from \"./discordActivity/Spotify\";\nimport { CustomStatus } from \"./discordActivity/CustomStatus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DiscordActivity() {\n  _s();\n  var _data$spotify2, _data$spotify2$timest, _code$assets, _dsSpotify$timestamps, _dsSpotify$timestamps2, _obsidian$assets;\n  const [data, setData] = useState(null);\n  const [tick, setTick] = useState(0);\n  const lastFetchTime = useRef(Date.now());\n  // Estado para controlar la transición\n  const [activeActivity, setActiveActivity] = useState(\"none\");\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const fetchData = async () => {\n    try {\n      const json = await fetchLanyard();\n      setData(json.data);\n      lastFetchTime.current = Date.now();\n    } catch (error) {\n      console.error(\"Error fetching Discord activity:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    const timer = setInterval(() => {\n      var _data$spotify, _data$spotify$timesta;\n      setTick(prev => prev + 1);\n      if (data !== null && data !== void 0 && (_data$spotify = data.spotify) !== null && _data$spotify !== void 0 && (_data$spotify$timesta = _data$spotify.timestamps) !== null && _data$spotify$timesta !== void 0 && _data$spotify$timesta.end) {\n        const now = Date.now();\n        if (now > data.spotify.timestamps.end + 3000) {\n          fetchData();\n        }\n        if (now - lastFetchTime.current > 30000) {\n          fetchData();\n        }\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [data === null || data === void 0 ? void 0 : (_data$spotify2 = data.spotify) === null || _data$spotify2 === void 0 ? void 0 : (_data$spotify2$timest = _data$spotify2.timestamps) === null || _data$spotify2$timest === void 0 ? void 0 : _data$spotify2$timest.end]);\n\n  // Efecto para determinar la actividad activa\n  useEffect(() => {\n    var _data$activities, _data$activities2;\n    if (!data) return;\n    const hasSpotify = !!data.spotify;\n    const hasCode = (_data$activities = data.activities) === null || _data$activities === void 0 ? void 0 : _data$activities.some(a => a.name === \"Visual Studio Code\");\n    const hasObsidian = (_data$activities2 = data.activities) === null || _data$activities2 === void 0 ? void 0 : _data$activities2.some(a => a.name === \"Obsidian\");\n    let nextActivity = \"none\";\n    if (hasSpotify) nextActivity = \"spotify\";else if (hasCode) nextActivity = \"code\";else if (hasObsidian) nextActivity = \"obsidian\";\n    if (nextActivity !== activeActivity) {\n      handleTransition(nextActivity);\n    }\n  }, [data]);\n\n  // Función para manejar la transición\n  const handleTransition = newActivity => {\n    setIsTransitioning(true);\n    setTimeout(() => {\n      setActiveActivity(newActivity);\n      setTimeout(() => {\n        setIsTransitioning(false);\n      }, 50);\n    }, 300);\n  };\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando presencia...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 21\n  }, this);\n\n  // ! General Variables & Helpers\n\n  const dsStatus = data.discord_status;\n  const dsSpotify = data.spotify || null;\n  const dsActivites = data.activities || [];\n  const custom = data.activities.find(a => a.type === 4) || {};\n  const emojiUrl = custom !== null && custom !== void 0 && custom.emoji ? resolveEmojiUrl(custom.emoji) : null;\n  const statusText = (custom === null || custom === void 0 ? void 0 : custom.state) || \"\";\n\n  // ! Visual Studio Code Variables\n  const code = data.activities.find(a => a.name === \"Visual Studio Code\");\n  const appId = code === null || code === void 0 ? void 0 : code.application_id;\n  const largeImg = resolveActivityImage(appId, code === null || code === void 0 ? void 0 : (_code$assets = code.assets) === null || _code$assets === void 0 ? void 0 : _code$assets.large_image);\n\n  // ! Spotify Variables\n  const albumArt = (dsSpotify === null || dsSpotify === void 0 ? void 0 : dsSpotify.album_art_url) || \"\";\n  const musicTime = dsSpotify ? formatMusicTime((_dsSpotify$timestamps = dsSpotify.timestamps) === null || _dsSpotify$timestamps === void 0 ? void 0 : _dsSpotify$timestamps.start, (_dsSpotify$timestamps2 = dsSpotify.timestamps) === null || _dsSpotify$timestamps2 === void 0 ? void 0 : _dsSpotify$timestamps2.end) : {\n    current: \"0:00\",\n    total: \"0:00\",\n    progress: 0\n  };\n\n  // ! Obsidian Variables\n  const obsidian = dsActivites.find(activity => activity.name === \"Obsidian\");\n  const obsidianAppId = obsidian === null || obsidian === void 0 ? void 0 : obsidian.application_id;\n  const obsidianLogo = resolveActivityImage(obsidianAppId, obsidian === null || obsidian === void 0 ? void 0 : (_obsidian$assets = obsidian.assets) === null || _obsidian$assets === void 0 ? void 0 : _obsidian$assets.large_image);\n\n  // Renderizar el contenido basado en la actividad activa\n  const renderActivityContent = () => {\n    var _code$assets2, _code$timestamps, _obsidian$timestamps;\n    const fadeClass = isTransitioning ? \"fade-out\" : \"fade-in\";\n    switch (activeActivity) {\n      case \"spotify\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `activity-content ${fadeClass}`,\n          children: /*#__PURE__*/_jsxDEV(Spotify, {\n            spotify: dsSpotify,\n            albumArt: albumArt,\n            musicTime: musicTime,\n            emojiUrl: emojiUrl,\n            statusText: statusText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this);\n      case \"code\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `activity-content ${fadeClass}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"activity-image\",\n            src: largeImg || undefined,\n            alt: (code === null || code === void 0 ? void 0 : code.details) || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"activity-detail\",\n              children: code === null || code === void 0 ? void 0 : code.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"activity-state\",\n              children: code === null || code === void 0 ? void 0 : code.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"activity-time\",\n              children: code === null || code === void 0 ? void 0 : (_code$assets2 = code.assets) === null || _code$assets2 === void 0 ? void 0 : _code$assets2.large_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n              children: formatTimeDisplay(code === null || code === void 0 ? void 0 : (_code$timestamps = code.timestamps) === null || _code$timestamps === void 0 ? void 0 : _code$timestamps.start)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CustomStatus, {\n              emojiUrl: emojiUrl,\n              statusText: statusText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this);\n      case \"obsidian\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `activity-content ${fadeClass}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"activity-image\",\n            src: obsidianLogo || undefined,\n            alt: (obsidian === null || obsidian === void 0 ? void 0 : obsidian.details) || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"activity-detail\",\n              children: obsidian === null || obsidian === void 0 ? void 0 : obsidian.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"activity-state\",\n              children: obsidian === null || obsidian === void 0 ? void 0 : obsidian.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n              className: \"activity-time\",\n              children: formatTimeDisplay(obsidian === null || obsidian === void 0 ? void 0 : (_obsidian$timestamps = obsidian.timestamps) === null || _obsidian$timestamps === void 0 ? void 0 : _obsidian$timestamps.start)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CustomStatus, {\n              emojiUrl: emojiUrl,\n              statusText: statusText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this);\n      case \"none\":\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `activity-content ${fadeClass}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"activity-detail\",\n              children: \"No current activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CustomStatus, {\n              emojiUrl: emojiUrl,\n              statusText: statusText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ds-activity ${dsStatus} discord-container`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity\",\n      children: renderActivityContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n_s(DiscordActivity, \"1fc7L813CufiXO1rl3vDaoO/AEI=\");\n_c = DiscordActivity;\nexport default DiscordActivity;\nvar _c;\n$RefreshReg$(_c, \"DiscordActivity\");","map":{"version":3,"names":["useEffect","useState","useRef","fetchLanyard","resolveActivityImage","resolveEmojiUrl","formatTimeDisplay","formatMusicTime","Spotify","CustomStatus","jsxDEV","_jsxDEV","DiscordActivity","_s","_data$spotify2","_data$spotify2$timest","_code$assets","_dsSpotify$timestamps","_dsSpotify$timestamps2","_obsidian$assets","data","setData","tick","setTick","lastFetchTime","Date","now","activeActivity","setActiveActivity","isTransitioning","setIsTransitioning","fetchData","json","current","error","console","timer","setInterval","_data$spotify","_data$spotify$timesta","prev","spotify","timestamps","end","clearInterval","_data$activities","_data$activities2","hasSpotify","hasCode","activities","some","a","name","hasObsidian","nextActivity","handleTransition","newActivity","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","dsStatus","discord_status","dsSpotify","dsActivites","custom","find","type","emojiUrl","emoji","statusText","state","code","appId","application_id","largeImg","assets","large_image","albumArt","album_art_url","musicTime","start","total","progress","obsidian","activity","obsidianAppId","obsidianLogo","renderActivityContent","_code$assets2","_code$timestamps","_obsidian$timestamps","fadeClass","className","src","undefined","alt","details","large_text","_c","$RefreshReg$"],"sources":["/home/aike/Development/aboutMe/src/components/DiscordActivity.tsx"],"sourcesContent":["import \"../styles/discordActivity.css\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { fetchLanyard } from \"../hooks/useLanyard\";\nimport {\n  resolveActivityImage,\n  resolveEmojiUrl,\n  formatTimeDisplay,\n  formatMusicTime,\n} from \"../utils/discordUtils\";\nimport { Spotify } from \"./discordActivity/Spotify\";\nimport { CustomStatus } from \"./discordActivity/CustomStatus\";\n\nexport function DiscordActivity() {\n  const [data, setData] = useState<any | null>(null);\n  const [tick, setTick] = useState(0);\n  const lastFetchTime = useRef<number>(Date.now());\n  // Estado para controlar la transición\n  const [activeActivity, setActiveActivity] = useState<string>(\"none\");\n  const [isTransitioning, setIsTransitioning] = useState<boolean>(false);\n\n  const fetchData = async () => {\n    try {\n      const json = await fetchLanyard();\n      setData(json.data);\n      lastFetchTime.current = Date.now();\n    } catch (error) {\n      console.error(\"Error fetching Discord activity:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n\n    const timer = setInterval(() => {\n      setTick((prev) => prev + 1);\n\n      if (data?.spotify?.timestamps?.end) {\n        const now = Date.now();\n        if (now > data.spotify.timestamps.end + 3000) {\n          fetchData();\n        }\n        if (now - lastFetchTime.current > 30000) {\n          fetchData();\n        }\n      }\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [data?.spotify?.timestamps?.end]);\n\n  // Efecto para determinar la actividad activa\n  useEffect(() => {\n    if (!data) return;\n\n    const hasSpotify = !!data.spotify;\n    const hasCode = data.activities?.some(\n      (a: any) => a.name === \"Visual Studio Code\"\n    );\n    const hasObsidian = data.activities?.some(\n      (a: any) => a.name === \"Obsidian\"\n    );\n\n    let nextActivity = \"none\";\n    if (hasSpotify) nextActivity = \"spotify\";\n    else if (hasCode) nextActivity = \"code\";\n    else if (hasObsidian) nextActivity = \"obsidian\";\n\n    if (nextActivity !== activeActivity) {\n      handleTransition(nextActivity);\n    }\n  }, [data]);\n\n  // Función para manejar la transición\n  const handleTransition = (newActivity: string) => {\n    setIsTransitioning(true);\n    setTimeout(() => {\n      setActiveActivity(newActivity);\n      setTimeout(() => {\n        setIsTransitioning(false);\n      }, 50);\n    }, 300);\n  };\n\n  if (!data) return <p>Cargando presencia...</p>;\n\n  // ! General Variables & Helpers\n  interface Activity {\n    name: string;\n    [key: string]: any;\n  }\n\n  const dsStatus = data.discord_status;\n  const dsSpotify = data.spotify || null;\n  const dsActivites = data.activities || [];\n\n  const custom = data.activities.find((a: any) => a.type === 4) || {};\n\n  const emojiUrl = custom?.emoji ? resolveEmojiUrl(custom.emoji) : null;\n  const statusText = custom?.state || \"\";\n\n  // ! Visual Studio Code Variables\n  const code = data.activities.find(\n    (a: any) => a.name === \"Visual Studio Code\"\n  );\n  const appId = code?.application_id;\n  const largeImg = resolveActivityImage(appId, code?.assets?.large_image);\n\n  // ! Spotify Variables\n  const albumArt = dsSpotify?.album_art_url || \"\";\n  const musicTime = dsSpotify\n    ? formatMusicTime(dsSpotify.timestamps?.start, dsSpotify.timestamps?.end)\n    : { current: \"0:00\", total: \"0:00\", progress: 0 };\n\n  // ! Obsidian Variables\n  const obsidian = dsActivites.find(\n    (activity: Activity) => activity.name === \"Obsidian\"\n  );\n  const obsidianAppId = obsidian?.application_id;\n  const obsidianLogo = resolveActivityImage(\n    obsidianAppId,\n    obsidian?.assets?.large_image\n  );\n\n  // Renderizar el contenido basado en la actividad activa\n  const renderActivityContent = () => {\n    const fadeClass = isTransitioning ? \"fade-out\" : \"fade-in\";\n\n    switch (activeActivity) {\n      case \"spotify\":\n        return (\n          <div className={`activity-content ${fadeClass}`}>\n            <Spotify\n              spotify={dsSpotify}\n              albumArt={albumArt}\n              musicTime={musicTime}\n              emojiUrl={emojiUrl}\n              statusText={statusText}\n            />\n          </div>\n        );\n\n      case \"code\":\n        return (\n          <div className={`activity-content ${fadeClass}`}>\n            <img\n              className=\"activity-image\"\n              src={largeImg || undefined}\n              alt={code?.details || \"\"}\n            />\n            <div className=\"activity-container\">\n              <h3 className=\"activity-detail\">{code?.details}</h3>\n              <h6 className=\"activity-state\">{code?.state}</h6>\n              <h4 className=\"activity-time\">{code?.assets?.large_text}</h4>\n              <time>{formatTimeDisplay(code?.timestamps?.start)}</time>\n              <CustomStatus emojiUrl={emojiUrl} statusText={statusText} />\n            </div>\n          </div>\n        );\n\n      case \"obsidian\":\n        return (\n          <div className={`activity-content ${fadeClass}`}>\n            <img\n              className=\"activity-image\"\n              src={obsidianLogo || undefined}\n              alt={obsidian?.details || \"\"}\n            />\n            <div className=\"activity-container\">\n              <h3 className=\"activity-detail\">{obsidian?.state}</h3>\n              <h6 className=\"activity-state\">{obsidian?.details}</h6>\n              <time className=\"activity-time\">\n                {formatTimeDisplay(obsidian?.timestamps?.start)}\n              </time>\n              <CustomStatus emojiUrl={emojiUrl} statusText={statusText} />\n            </div>\n          </div>\n        );\n\n      case \"none\":\n      default:\n        return (\n          <div className={`activity-content ${fadeClass}`}>\n            <div className=\"activity-container\">\n              <h3 className=\"activity-detail\">No current activity</h3>\n              <CustomStatus emojiUrl={emojiUrl} statusText={statusText} />\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className={`ds-activity ${dsStatus} discord-container`}>\n      <div className=\"activity\">{renderActivityContent()}</div>\n    </div>\n  );\n}\n\nexport default DiscordActivity;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}