{"ast":null,"code":"var _jsxFileName = \"/home/aike/Development/aboutMe/src/components/DiscordActivity.tsx\",\n  _s = $RefreshSig$();\nimport \"../styles/discordActivity.css\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { fetchLanyard } from \"../hooks/useLanyard\";\nimport { resolveActivityImage, resolveEmojiUrl, formatTimeDisplay } from \"../utils/discordUtils\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function DiscordActivity() {\n  _s();\n  var _data$spotify2, _data$spotify2$timest, _code$assets, _dsSpotify$timestamps, _dsSpotify$timestamps2, _obsidian$assets, _code$assets2, _code$timestamps;\n  const [data, setData] = useState(null);\n  const [tick, setTick] = useState(0);\n  const [timer, setTimer] = useState(0);\n  const lastFetchTime = useRef(Date.now());\n  const fetchData = async () => {\n    try {\n      const json = await fetchLanyard();\n      setData(json.data);\n      lastFetchTime.current = Date.now();\n    } catch (error) {\n      console.error(\"Error fetching Discord activity:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    const timer = setInterval(() => {\n      var _data$spotify, _data$spotify$timesta;\n      setTick(prev => prev + 1);\n\n      // Check if Spotify data exists before trying to access it\n      if (data !== null && data !== void 0 && (_data$spotify = data.spotify) !== null && _data$spotify !== void 0 && (_data$spotify$timesta = _data$spotify.timestamps) !== null && _data$spotify$timesta !== void 0 && _data$spotify$timesta.end) {\n        const now = Date.now();\n        // once start time of the music reaches the end, refetchs\n        if (now > data.spotify.timestamps.end + 3000) {\n          fetchData();\n        }\n\n        // refetching each 30s\n        if (now - lastFetchTime.current > 30000) {\n          fetchData();\n        }\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [data === null || data === void 0 ? void 0 : (_data$spotify2 = data.spotify) === null || _data$spotify2 === void 0 ? void 0 : (_data$spotify2$timest = _data$spotify2.timestamps) === null || _data$spotify2$timest === void 0 ? void 0 : _data$spotify2$timest.end]);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando presencia...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 21\n  }, this);\n\n  // ! General Variables & Helpers\n\n  function formatMusicTime(start, end) {\n    if (!start || !end) return {\n      current: \"0:00\",\n      total: \"0:00\",\n      progress: 0\n    };\n    const now = Date.now();\n    const totalDuration = end - start;\n    const currentPosition = now - start;\n    const progress = Math.min(Math.max(currentPosition / totalDuration * 100, 0), 100);\n    return {\n      current: formatTimeDisplay(start, now),\n      total: formatTimeDisplay(start, end),\n      progress\n    };\n  }\n  const dsStatus = data.discord_status;\n  const dsSpotify = data.spotify || null;\n  const dsActivites = data.activities || [];\n  const custom = data.activities.find(a => a.type === 4) || {};\n  const emojiUrl = resolveEmojiUrl(custom === null || custom === void 0 ? void 0 : custom.emoji);\n  const statusText = custom.state;\n\n  // ! Visual Studio Code Variables\n  const code = data.activities.find(a => a.name === \"Visual Studio Code\");\n  const appId = code === null || code === void 0 ? void 0 : code.application_id;\n  const largeImg = resolveActivityImage(appId, code === null || code === void 0 ? void 0 : (_code$assets = code.assets) === null || _code$assets === void 0 ? void 0 : _code$assets.large_image);\n\n  // ! Spotify Variables\n  const albumArt = dsSpotify.album_art_url || \"\";\n  const musicTime = formatMusicTime(dsSpotify === null || dsSpotify === void 0 ? void 0 : (_dsSpotify$timestamps = dsSpotify.timestamps) === null || _dsSpotify$timestamps === void 0 ? void 0 : _dsSpotify$timestamps.start, dsSpotify === null || dsSpotify === void 0 ? void 0 : (_dsSpotify$timestamps2 = dsSpotify.timestamps) === null || _dsSpotify$timestamps2 === void 0 ? void 0 : _dsSpotify$timestamps2.end);\n\n  // ! Obsidian Variables\n\n  const obsidian = dsActivites.find(dsActivites => dsActivites.name === \"Obsidian\");\n  const obsidianAppId = obsidian === null || obsidian === void 0 ? void 0 : obsidian.application_id;\n  const obsidianLogo = resolveActivityImage(obsidianAppId, obsidian === null || obsidian === void 0 ? void 0 : (_obsidian$assets = obsidian.assets) === null || _obsidian$assets === void 0 ? void 0 : _obsidian$assets.large_image);\n  const CustomStatus = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (emojiUrl || statusText) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emote\",\n      children: [statusText && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `status-text-${emojiUrl ? \"emoji\" : \"normal\"}`,\n        children: statusText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), emojiUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: emojiUrl,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n  const SpotifyInfo = () => dsSpotify != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"album-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://open.spotify.com/track/${dsSpotify.track_id}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"activity-image\",\n          src: albumArt,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomStatus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://open.spotify.com/track/${dsSpotify.track_id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"activity-detail\",\n          children: dsSpotify.song\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"activity-state\",\n        children: dsSpotify.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"activity-time\",\n        children: [musicTime.current, \" / \", musicTime.total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), dsSpotify && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-track\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${musicTime.progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : \"\";\n\n  // se que, obsidian y VSCODE no pueden estar al mismo tiempo, siempre pueden ser 2, 1 o 0 actividades. solamente\n  // se intercambia entre que esta o no presente spotify,\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ds-activity ${dsStatus} discord-container`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity\",\n      children: code && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ds-activity code\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"activity-image\",\n          src: largeImg || undefined,\n          alt: code === null || code === void 0 ? void 0 : code.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: code === null || code === void 0 ? void 0 : code.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: code === null || code === void 0 ? void 0 : code.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: code === null || code === void 0 ? void 0 : (_code$assets2 = code.assets) === null || _code$assets2 === void 0 ? void 0 : _code$assets2.large_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n          children: formatTimeDisplay(code === null || code === void 0 ? void 0 : (_code$timestamps = code.timestamps) === null || _code$timestamps === void 0 ? void 0 : _code$timestamps.start)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(DiscordActivity, \"9sXkIAscM93OL9kFTKCfDsFYyT4=\");\n_c = DiscordActivity;\nexport default DiscordActivity;\nvar _c;\n$RefreshReg$(_c, \"DiscordActivity\");","map":{"version":3,"names":["useEffect","useState","useRef","fetchLanyard","resolveActivityImage","resolveEmojiUrl","formatTimeDisplay","jsxDEV","_jsxDEV","Fragment","_Fragment","DiscordActivity","_s","_data$spotify2","_data$spotify2$timest","_code$assets","_dsSpotify$timestamps","_dsSpotify$timestamps2","_obsidian$assets","_code$assets2","_code$timestamps","data","setData","tick","setTick","timer","setTimer","lastFetchTime","Date","now","fetchData","json","current","error","console","setInterval","_data$spotify","_data$spotify$timesta","prev","spotify","timestamps","end","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","formatMusicTime","start","total","progress","totalDuration","currentPosition","Math","min","max","dsStatus","discord_status","dsSpotify","dsActivites","activities","custom","find","a","type","emojiUrl","emoji","statusText","state","code","name","appId","application_id","largeImg","assets","large_image","albumArt","album_art_url","musicTime","obsidian","obsidianAppId","obsidianLogo","CustomStatus","className","src","alt","SpotifyInfo","href","track_id","song","artist","style","width","undefined","details","large_text","_c","$RefreshReg$"],"sources":["/home/aike/Development/aboutMe/src/components/DiscordActivity.tsx"],"sourcesContent":["import \"../styles/discordActivity.css\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { fetchLanyard } from \"../hooks/useLanyard\";\nimport {\n  resolveActivityImage,\n  resolveEmojiUrl,\n  formatTimeDisplay,\n  formatMusicTime,\n} from \"../utils/discordUtils\";\n\nexport function DiscordActivity() {\n  const [data, setData] = useState<any | null>(null);\n  const [tick, setTick] = useState(0);\n  const [timer, setTimer] = useState(0);\n  const lastFetchTime = useRef<number>(Date.now());\n\n  const fetchData = async () => {\n    try {\n      const json = await fetchLanyard();\n      setData(json.data);\n      lastFetchTime.current = Date.now();\n    } catch (error) {\n      console.error(\"Error fetching Discord activity:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n\n    const timer = setInterval(() => {\n      setTick((prev) => prev + 1);\n\n      // Check if Spotify data exists before trying to access it\n      if (data?.spotify?.timestamps?.end) {\n        const now = Date.now();\n        // once start time of the music reaches the end, refetchs\n        if (now > data.spotify.timestamps.end + 3000) {\n          fetchData();\n        }\n\n        // refetching each 30s\n        if (now - lastFetchTime.current > 30000) {\n          fetchData();\n        }\n      }\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [data?.spotify?.timestamps?.end]);\n\n  if (!data) return <p>Cargando presencia...</p>;\n\n  // ! General Variables & Helpers\n\n  interface Activity {\n    name: string;\n    [key: string]: any;\n  }\n\n  interface SpotifyData {\n    [key: string]: any;\n  }\n\n  interface LanyardData {\n    discord_status: string;\n    spotify: SpotifyData | null;\n    data: {\n      activities: Activity[];\n    };\n  }\n\n  function formatMusicTime(\n    start?: number,\n    end?: number\n  ): { current: string; total: string; progress: number } {\n    if (!start || !end) return { current: \"0:00\", total: \"0:00\", progress: 0 };\n\n    const now = Date.now();\n    const totalDuration = end - start;\n    const currentPosition = now - start;\n\n    const progress = Math.min(\n      Math.max((currentPosition / totalDuration) * 100, 0),\n      100\n    );\n\n    return {\n      current: formatTimeDisplay(start, now),\n      total: formatTimeDisplay(start, end),\n      progress,\n    };\n  }\n\n  const dsStatus = data.discord_status;\n  const dsSpotify = data.spotify || null;\n  const dsActivites = data.activities || [];\n  const custom = data.activities.find((a: any) => a.type === 4) || {};\n  const emojiUrl = resolveEmojiUrl(custom?.emoji);\n  const statusText = custom.state;\n\n  // ! Visual Studio Code Variables\n  const code = data.activities.find(\n    (a: any) => a.name === \"Visual Studio Code\"\n  );\n  const appId = code?.application_id;\n  const largeImg = resolveActivityImage(appId, code?.assets?.large_image);\n\n  // ! Spotify Variables\n  const albumArt = dsSpotify.album_art_url || \"\";\n  const musicTime = formatMusicTime(\n    dsSpotify?.timestamps?.start,\n    dsSpotify?.timestamps?.end\n  );\n\n  // ! Obsidian Variables\n\n  const obsidian = dsActivites.find(\n    (dsActivites: Activity) => dsActivites.name === \"Obsidian\"\n  );\n  const obsidianAppId = obsidian?.application_id;\n  const obsidianLogo = resolveActivityImage(\n    obsidianAppId,\n    obsidian?.assets?.large_image\n  );\n\n  const CustomStatus = () => (\n    <>\n      {(emojiUrl || statusText) && (\n        <div className=\"emote\">\n          {statusText && (\n            <p className={`status-text-${emojiUrl ? \"emoji\" : \"normal\"}`}>\n              {statusText}\n            </p>\n          )}\n          {emojiUrl && <img src={emojiUrl} alt=\"\"></img>}\n        </div>\n      )}\n    </>\n  );\n\n  const SpotifyInfo = () =>\n    dsSpotify != null ? (\n      <>\n        <div className=\"album-container\">\n          <a href={`https://open.spotify.com/track/${dsSpotify.track_id}`}>\n            <img className=\"activity-image\" src={albumArt} alt=\"\"></img>\n          </a>\n          <CustomStatus />\n        </div>\n        <div className=\"activity-container\">\n          <a href={`https://open.spotify.com/track/${dsSpotify.track_id}`}>\n            <h3 className=\"activity-detail\">{dsSpotify.song}</h3>\n          </a>\n          <h4 className=\"activity-state\">{dsSpotify.artist}</h4>\n          <span className=\"activity-time\">\n            {musicTime.current} / {musicTime.total}\n          </span>\n          {dsSpotify && (\n            <div className=\"progress-bar\">\n              <div className=\"progress-track\">\n                <div\n                  className=\"progress-fill\"\n                  style={{ width: `${musicTime.progress}%` }}\n                ></div>\n              </div>\n            </div>\n          )}\n        </div>\n      </>\n    ) : (\n      \"\"\n    );\n\n  // se que, obsidian y VSCODE no pueden estar al mismo tiempo, siempre pueden ser 2, 1 o 0 actividades. solamente\n  // se intercambia entre que esta o no presente spotify,\n  return (\n    <div className={`ds-activity ${dsStatus} discord-container`}>\n      <div className=\"activity\">\n        {/* dsSpotify && <SpotifyInfo /> */}\n        {code && (\n          <div className=\"ds-activity code\">\n            <img\n              className=\"activity-image\"\n              src={largeImg || undefined}\n              alt={code?.details}\n            />\n            <h3>{code?.details}</h3>\n            <h6>{code?.state}</h6>\n            <h4>{code?.assets?.large_text}</h4>\n            <time>{formatTimeDisplay(code?.timestamps?.start)}</time>\n          </div>\n        )}\n      </div>\n\n      <div>\n        {/* \n        <div className=\"ds-activity code\">\n          <img\n            className=\"activity-image\"\n            src={obsidianLogo || undefined}\n            alt={code?.details}\n          />\n          <h3>{obsidian?.state}</h3>\n          <h6>{obsidian?.details}</h6>\n          <time>{formatTimeDisplay(obsidian?.timestamps?.start)}</time>\n        </div>\n        */}\n      </div>\n      {/* add where im active*/}\n    </div>\n  );\n}\n\nexport default DiscordActivity;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}