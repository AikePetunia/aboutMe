{"ast":null,"code":"var _jsxFileName = \"/home/aike/Development/aboutMe/src/components/DiscordActivity.tsx\",\n  _s = $RefreshSig$();\nimport \"../styles/discordActivity.css\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { fetchLanyard } from \"../hooks/useLanyard\";\nimport { resolveEmojiUrl, formatMusicTime } from \"../utils/discordUtils\";\nimport { Spotify } from \"./discordActivity/Spotify\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function DiscordActivity() {\n  _s();\n  var _data$spotify2, _data$spotify2$timest, _dsSpotify$timestamps, _dsSpotify$timestamps2;\n  const [data, setData] = useState(null);\n  const [tick, setTick] = useState(0);\n  const lastFetchTime = useRef(Date.now());\n  const fetchData = async () => {\n    try {\n      const json = await fetchLanyard();\n      setData(json.data);\n      lastFetchTime.current = Date.now();\n    } catch (error) {\n      console.error(\"Error fetching Discord activity:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    const timer = setInterval(() => {\n      var _data$spotify, _data$spotify$timesta;\n      setTick(prev => prev + 1);\n      if (data !== null && data !== void 0 && (_data$spotify = data.spotify) !== null && _data$spotify !== void 0 && (_data$spotify$timesta = _data$spotify.timestamps) !== null && _data$spotify$timesta !== void 0 && _data$spotify$timesta.end) {\n        const now = Date.now();\n        // once start time of the music reaches the end, refetchs\n        if (now > data.spotify.timestamps.end + 3000) {\n          fetchData();\n        }\n\n        // refetching each 30s\n        if (now - lastFetchTime.current > 30000) {\n          fetchData();\n        }\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [data === null || data === void 0 ? void 0 : (_data$spotify2 = data.spotify) === null || _data$spotify2 === void 0 ? void 0 : (_data$spotify2$timest = _data$spotify2.timestamps) === null || _data$spotify2$timest === void 0 ? void 0 : _data$spotify2$timest.end]);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando presencia...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 21\n  }, this);\n\n  // ! General Variables & Helpers\n\n  const dsStatus = data.discord_status;\n  const dsSpotify = data.spotify || null;\n  const dsActivities = data.activities || [];\n  const custom = dsActivities.find(a => a.type === 4) || {};\n  const emojiUrl = custom !== null && custom !== void 0 && custom.emoji ? resolveEmojiUrl(custom.emoji) : null;\n  const statusText = (custom === null || custom === void 0 ? void 0 : custom.state) || \"\";\n  const code = dsActivities.find(a => (a === null || a === void 0 ? void 0 : a.name) === \"Visual Studio Code\");\n  const obsidian = dsActivities.find(a => (a === null || a === void 0 ? void 0 : a.name) === \"Obsidian\");\n  const albumArt = (dsSpotify === null || dsSpotify === void 0 ? void 0 : dsSpotify.album_art_url) || \"\";\n  const musicTime = dsSpotify ? formatMusicTime((_dsSpotify$timestamps = dsSpotify.timestamps) === null || _dsSpotify$timestamps === void 0 ? void 0 : _dsSpotify$timestamps.start, (_dsSpotify$timestamps2 = dsSpotify.timestamps) === null || _dsSpotify$timestamps2 === void 0 ? void 0 : _dsSpotify$timestamps2.end) : {\n    current: \"0:00\",\n    total: \"0:00\",\n    progress: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ds-activity ${dsStatus} discord-container`,\n    children: dsActivities ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activity\",\n        children: dsSpotify && /*#__PURE__*/_jsxDEV(Spotify, {\n          spotify: dsSpotify,\n          albumArt: albumArt,\n          musicTime: musicTime,\n          emojiUrl: emojiUrl,\n          statusText: statusText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }, this)\n    }, void 0, false) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 4\n  }, this);\n}\n_s(DiscordActivity, \"tkCtHjnT6w7Vzxc9hHYyD3ljQZM=\");\n_c = DiscordActivity;\nexport default DiscordActivity;\nvar _c;\n$RefreshReg$(_c, \"DiscordActivity\");","map":{"version":3,"names":["useEffect","useState","useRef","fetchLanyard","resolveEmojiUrl","formatMusicTime","Spotify","jsxDEV","_jsxDEV","Fragment","_Fragment","DiscordActivity","_s","_data$spotify2","_data$spotify2$timest","_dsSpotify$timestamps","_dsSpotify$timestamps2","data","setData","tick","setTick","lastFetchTime","Date","now","fetchData","json","current","error","console","timer","setInterval","_data$spotify","_data$spotify$timesta","prev","spotify","timestamps","end","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","dsStatus","discord_status","dsSpotify","dsActivities","activities","custom","find","a","type","emojiUrl","emoji","statusText","state","code","name","obsidian","albumArt","album_art_url","musicTime","start","total","progress","className","_c","$RefreshReg$"],"sources":["/home/aike/Development/aboutMe/src/components/DiscordActivity.tsx"],"sourcesContent":["import \"../styles/discordActivity.css\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { fetchLanyard } from \"../hooks/useLanyard\";\nimport {\n  resolveActivityImage,\n  resolveEmojiUrl,\n  formatTimeDisplay,\n  formatMusicTime,\n} from \"../utils/discordUtils\";\nimport { Spotify } from \"./discordActivity/Spotify\";\nimport { Obsidian } from \"./discordActivity/Obsidian\";\nimport { Code } from \"./discordActivity/Code\";\nimport { CustomStatus } from \"./discordActivity/CustomStatus\";\n\ninterface Activity {\n  name: string;\n  [key: string]: any;\n}\nexport function DiscordActivity() {\n  const [data, setData] = useState<any | null>(null);\n  const [tick, setTick] = useState(0);\n  const lastFetchTime = useRef<number>(Date.now());\n\n  const fetchData = async () => {\n    try {\n      const json = await fetchLanyard();\n      setData(json.data);\n      lastFetchTime.current = Date.now();\n    } catch (error) {\n      console.error(\"Error fetching Discord activity:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n\n    const timer = setInterval(() => {\n      setTick((prev) => prev + 1);\n\n      if (data?.spotify?.timestamps?.end) {\n        const now = Date.now();\n        // once start time of the music reaches the end, refetchs\n        if (now > data.spotify.timestamps.end + 3000) {\n          fetchData();\n        }\n\n        // refetching each 30s\n        if (now - lastFetchTime.current > 30000) {\n          fetchData();\n        }\n      }\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [data?.spotify?.timestamps?.end]);\n\n  if (!data) return <p>Cargando presencia...</p>;\n\n  // ! General Variables & Helpers\n\n  const dsStatus = data.discord_status;\n  const dsSpotify = data.spotify || null;\n  const dsActivities = data.activities || [];\n\n  const custom = dsActivities.find((a: any) => a.type === 4) || {};\n  const emojiUrl = custom?.emoji ? resolveEmojiUrl(custom.emoji) : null;\n  const statusText = custom?.state || \"\";\n\n  const code = dsActivities.find((a: any) => a?.name === \"Visual Studio Code\");\n  const obsidian = dsActivities.find((a: any) => a?.name === \"Obsidian\");\n\n  const albumArt = dsSpotify?.album_art_url || \"\";\n  const musicTime = dsSpotify\n    ? formatMusicTime(dsSpotify.timestamps?.start, dsSpotify.timestamps?.end)\n    : { current: \"0:00\", total: \"0:00\", progress: 0 };\n\n return (\n   <div className={`ds-activity ${dsStatus} discord-container`}>\n     {dsActivities ? (\n       <>\n         <div className=\"activity\">\n           {dsSpotify && (\n             <Spotify\n               spotify={dsSpotify}\n               albumArt={albumArt}\n               musicTime={musicTime}\n               emojiUrl={emojiUrl}\n               statusText={statusText}\n             />\n           )}\n         </div>\n       </>\n     ) : (\n       \"\"\n     )}\n   </div>\n );\n}\n\nexport default DiscordActivity;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}