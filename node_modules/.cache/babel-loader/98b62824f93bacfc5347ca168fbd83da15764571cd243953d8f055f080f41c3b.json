{"ast":null,"code":"var _jsxFileName = \"/home/aike/Development/aboutMe/src/components/DiscordActivity.tsx\",\n  _s = $RefreshSig$();\nimport \"../styles/discordActivity.css\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { fetchLanyard } from \"../hooks/useLanyard\";\nimport { resolveActivityImage, resolveEmojiUrl, formatTimeDisplay, formatMusicTime } from \"../utils/discordUtils\";\nimport { Spotify } from \"./discordActivity/Spotify\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function DiscordActivity() {\n  _s();\n  var _data$spotify2, _data$spotify2$timest, _code$assets, _dsSpotify$timestamps, _dsSpotify$timestamps2, _obsidian$assets;\n  const [data, setData] = useState(null);\n  const [tick, setTick] = useState(0);\n  const lastFetchTime = useRef(Date.now());\n  const fetchData = async () => {\n    try {\n      const json = await fetchLanyard();\n      setData(json.data);\n      lastFetchTime.current = Date.now();\n    } catch (error) {\n      console.error(\"Error fetching Discord activity:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    const timer = setInterval(() => {\n      var _data$spotify, _data$spotify$timesta;\n      setTick(prev => prev + 1);\n      if (data !== null && data !== void 0 && (_data$spotify = data.spotify) !== null && _data$spotify !== void 0 && (_data$spotify$timesta = _data$spotify.timestamps) !== null && _data$spotify$timesta !== void 0 && _data$spotify$timesta.end) {\n        const now = Date.now();\n        // once start time of the music reaches the end, refetchs\n        if (now > data.spotify.timestamps.end + 3000) {\n          fetchData();\n        }\n\n        // refetching each 30s\n        if (now - lastFetchTime.current > 30000) {\n          fetchData();\n        }\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [data === null || data === void 0 ? void 0 : (_data$spotify2 = data.spotify) === null || _data$spotify2 === void 0 ? void 0 : (_data$spotify2$timest = _data$spotify2.timestamps) === null || _data$spotify2$timest === void 0 ? void 0 : _data$spotify2$timest.end]);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando presencia...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 21\n  }, this);\n\n  // ! General Variables & Helpers\n\n  const dsStatus = data.discord_status;\n  const dsSpotify = data.spotify || null;\n  const dsActivites = data.activities || [];\n  const custom = data.activities.find(a => a.type === 4) || {};\n  const emojiUrl = custom !== null && custom !== void 0 && custom.emoji ? resolveEmojiUrl(custom.emoji) : null;\n  const statusText = (custom === null || custom === void 0 ? void 0 : custom.state) || \"\";\n\n  // ! Visual Studio Code Variables\n  const code = data.activities.find(a => a.name === \"Visual Studio Code\");\n  const appId = code === null || code === void 0 ? void 0 : code.application_id;\n  const largeImg = resolveActivityImage(appId, code === null || code === void 0 ? void 0 : (_code$assets = code.assets) === null || _code$assets === void 0 ? void 0 : _code$assets.large_image);\n\n  // ! Spotify Variables - Only compute these if dsSpotify exists\n  const albumArt = (dsSpotify === null || dsSpotify === void 0 ? void 0 : dsSpotify.album_art_url) || \"\";\n  const musicTime = dsSpotify ? formatMusicTime((_dsSpotify$timestamps = dsSpotify.timestamps) === null || _dsSpotify$timestamps === void 0 ? void 0 : _dsSpotify$timestamps.start, (_dsSpotify$timestamps2 = dsSpotify.timestamps) === null || _dsSpotify$timestamps2 === void 0 ? void 0 : _dsSpotify$timestamps2.end) : {\n    current: \"0:00\",\n    total: \"0:00\",\n    progress: 0\n  };\n\n  // ! Obsidian Variables\n  const obsidian = dsActivites.find(activity => activity.name === \"Obsidian\");\n  const obsidianAppId = obsidian === null || obsidian === void 0 ? void 0 : obsidian.application_id;\n  const obsidianLogo = resolveActivityImage(obsidianAppId, obsidian === null || obsidian === void 0 ? void 0 : (_obsidian$assets = obsidian.assets) === null || _obsidian$assets === void 0 ? void 0 : _obsidian$assets.large_image);\n  const CustomStatus = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (emojiUrl || statusText) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emote\",\n      children: [statusText && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `status-text-${emojiUrl ? \"emoji\" : \"normal\"}`,\n        children: statusText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), emojiUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: emojiUrl,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n  const SpotifyInfo = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"album-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://open.spotify.com/track/${dsSpotify === null || dsSpotify === void 0 ? void 0 : dsSpotify.track_id}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"activity-image\",\n          src: albumArt,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomStatus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://open.spotify.com/track/${dsSpotify === null || dsSpotify === void 0 ? void 0 : dsSpotify.track_id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"activity-detail\",\n          children: dsSpotify === null || dsSpotify === void 0 ? void 0 : dsSpotify.song\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"activity-state\",\n        children: dsSpotify === null || dsSpotify === void 0 ? void 0 : dsSpotify.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"activity-time\",\n        children: [musicTime.current, \" / \", musicTime.total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-track\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${musicTime.progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  const codeActivity = () => {\n    var _code$assets2, _code$timestamps;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !dsSpotify && code && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ds-activity\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"activity-image\",\n          src: largeImg || undefined,\n          alt: (code === null || code === void 0 ? void 0 : code.details) || \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: code === null || code === void 0 ? void 0 : code.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: code === null || code === void 0 ? void 0 : code.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: code === null || code === void 0 ? void 0 : (_code$assets2 = code.assets) === null || _code$assets2 === void 0 ? void 0 : _code$assets2.large_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n          children: formatTimeDisplay(code === null || code === void 0 ? void 0 : (_code$timestamps = code.timestamps) === null || _code$timestamps === void 0 ? void 0 : _code$timestamps.start)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n  const obsidianActivity = () => {\n    var _obsidian$timestamps;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !dsSpotify && !code && obsidian && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ds-activity\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"activity-image\",\n          src: obsidianLogo || undefined,\n          alt: (obsidian === null || obsidian === void 0 ? void 0 : obsidian.details) || \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: obsidian === null || obsidian === void 0 ? void 0 : obsidian.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: obsidian === null || obsidian === void 0 ? void 0 : obsidian.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n          children: formatTimeDisplay(obsidian === null || obsidian === void 0 ? void 0 : (_obsidian$timestamps = obsidian.timestamps) === null || _obsidian$timestamps === void 0 ? void 0 : _obsidian$timestamps.start)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n  const hyperExcepcionalCase = () => !dsSpotify && !code && !obsidian && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"activity-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"activity-detail\",\n      children: \"No current activity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CustomStatus, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 7\n  }, this);\n\n  /**\n   * @param (activities) - Componentes to work on transition\n   * @param (timeTransition) {number} - timeouts of transition\n   */\n  function transitionStatus(activities = [], timeTransition = 0) {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ds-activity ${dsStatus} discord-container`,\n    children: dsActivites ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activity\",\n        children: dsSpotify && /*#__PURE__*/_jsxDEV(Spotify, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n_s(DiscordActivity, \"tkCtHjnT6w7Vzxc9hHYyD3ljQZM=\");\n_c = DiscordActivity;\nexport default DiscordActivity;\nvar _c;\n$RefreshReg$(_c, \"DiscordActivity\");","map":{"version":3,"names":["useEffect","useState","useRef","fetchLanyard","resolveActivityImage","resolveEmojiUrl","formatTimeDisplay","formatMusicTime","Spotify","jsxDEV","_jsxDEV","Fragment","_Fragment","DiscordActivity","_s","_data$spotify2","_data$spotify2$timest","_code$assets","_dsSpotify$timestamps","_dsSpotify$timestamps2","_obsidian$assets","data","setData","tick","setTick","lastFetchTime","Date","now","fetchData","json","current","error","console","timer","setInterval","_data$spotify","_data$spotify$timesta","prev","spotify","timestamps","end","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","dsStatus","discord_status","dsSpotify","dsActivites","activities","custom","find","a","type","emojiUrl","emoji","statusText","state","code","name","appId","application_id","largeImg","assets","large_image","albumArt","album_art_url","musicTime","start","total","progress","obsidian","activity","obsidianAppId","obsidianLogo","CustomStatus","className","src","alt","SpotifyInfo","href","track_id","song","artist","style","width","codeActivity","_code$assets2","_code$timestamps","undefined","details","large_text","obsidianActivity","_obsidian$timestamps","hyperExcepcionalCase","transitionStatus","timeTransition","_c","$RefreshReg$"],"sources":["/home/aike/Development/aboutMe/src/components/DiscordActivity.tsx"],"sourcesContent":["import \"../styles/discordActivity.css\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { fetchLanyard } from \"../hooks/useLanyard\";\nimport {\n  resolveActivityImage,\n  resolveEmojiUrl,\n  formatTimeDisplay,\n  formatMusicTime,\n} from \"../utils/discordUtils\";\nimport { Spotify } from \"./discordActivity/Spotify\";\nexport function DiscordActivity() {\n  const [data, setData] = useState<any | null>(null);\n  const [tick, setTick] = useState(0);\n  const lastFetchTime = useRef<number>(Date.now());\n\n  const fetchData = async () => {\n    try {\n      const json = await fetchLanyard();\n      setData(json.data);\n      lastFetchTime.current = Date.now();\n    } catch (error) {\n      console.error(\"Error fetching Discord activity:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n\n    const timer = setInterval(() => {\n      setTick((prev) => prev + 1);\n\n      if (data?.spotify?.timestamps?.end) {\n        const now = Date.now();\n        // once start time of the music reaches the end, refetchs\n        if (now > data.spotify.timestamps.end + 3000) {\n          fetchData();\n        }\n\n        // refetching each 30s\n        if (now - lastFetchTime.current > 30000) {\n          fetchData();\n        }\n      }\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [data?.spotify?.timestamps?.end]);\n\n  if (!data) return <p>Cargando presencia...</p>;\n\n  // ! General Variables & Helpers\n  interface Activity {\n    name: string;\n    [key: string]: any;\n  }\n\n  interface SpotifyData {\n    [key: string]: any;\n  }\n\n  interface LanyardData {\n    discord_status: string;\n    spotify: SpotifyData | null;\n    data: {\n      activities: Activity[];\n    };\n  }\n\n  const dsStatus = data.discord_status;\n  const dsSpotify = data.spotify || null;\n  const dsActivites = data.activities || [];\n\n  const custom = data.activities.find((a: any) => a.type === 4) || {};\n\n  const emojiUrl = custom?.emoji ? resolveEmojiUrl(custom.emoji) : null;\n  const statusText = custom?.state || \"\";\n\n  // ! Visual Studio Code Variables\n  const code = data.activities.find(\n    (a: any) => a.name === \"Visual Studio Code\"\n  );\n  const appId = code?.application_id;\n  const largeImg = resolveActivityImage(appId, code?.assets?.large_image);\n\n  // ! Spotify Variables - Only compute these if dsSpotify exists\n  const albumArt = dsSpotify?.album_art_url || \"\";\n  const musicTime = dsSpotify\n    ? formatMusicTime(dsSpotify.timestamps?.start, dsSpotify.timestamps?.end)\n    : { current: \"0:00\", total: \"0:00\", progress: 0 };\n\n  // ! Obsidian Variables\n  const obsidian = dsActivites.find(\n    (activity: Activity) => activity.name === \"Obsidian\"\n  );\n  const obsidianAppId = obsidian?.application_id;\n  const obsidianLogo = resolveActivityImage(\n    obsidianAppId,\n    obsidian?.assets?.large_image\n  );\n\n  const CustomStatus = () => (\n    <>\n      {(emojiUrl || statusText) && (\n        <div className=\"emote\">\n          {statusText && (\n            <p className={`status-text-${emojiUrl ? \"emoji\" : \"normal\"}`}>\n              {statusText}\n            </p>\n          )}\n          {emojiUrl && <img src={emojiUrl} alt=\"\"></img>}\n        </div>\n      )}\n    </>\n  );\n\n  const SpotifyInfo = () => (\n    <>\n      <div className=\"album-container\">\n        <a href={`https://open.spotify.com/track/${dsSpotify?.track_id}`}>\n          <img className=\"activity-image\" src={albumArt} alt=\"\"></img>\n        </a>\n        <CustomStatus />\n      </div>\n      <div className=\"activity-container\">\n        <a href={`https://open.spotify.com/track/${dsSpotify?.track_id}`}>\n          <h3 className=\"activity-detail\">{dsSpotify?.song}</h3>\n        </a>\n        <h4 className=\"activity-state\">{dsSpotify?.artist}</h4>\n        <span className=\"activity-time\">\n          {musicTime.current} / {musicTime.total}\n        </span>\n        <div className=\"progress-bar\">\n          <div className=\"progress-track\">\n            <div\n              className=\"progress-fill\"\n              style={{ width: `${musicTime.progress}%` }}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n  const codeActivity = () => (\n    <>\n      {!dsSpotify && code && (\n        <div className=\"ds-activity\">\n          <img\n            className=\"activity-image\"\n            src={largeImg || undefined}\n            alt={code?.details || \"\"}\n          />\n          <h3>{code?.details}</h3>\n          <h6>{code?.state}</h6>\n          <h4>{code?.assets?.large_text}</h4>\n          <time>{formatTimeDisplay(code?.timestamps?.start)}</time>\n        </div>\n      )}\n    </>\n  );\n\n  const obsidianActivity = () => (\n    <>\n      {!dsSpotify && !code && obsidian && (\n        <div className=\"ds-activity\">\n          <img\n            className=\"activity-image\"\n            src={obsidianLogo || undefined}\n            alt={obsidian?.details || \"\"}\n          />\n          <h3>{obsidian?.state}</h3>\n          <h6>{obsidian?.details}</h6>\n          <time>{formatTimeDisplay(obsidian?.timestamps?.start)}</time>\n        </div>\n      )}\n    </>\n  );\n\n  const hyperExcepcionalCase = () =>\n    !dsSpotify &&\n    !code &&\n    !obsidian && (\n      <div className=\"activity-container\">\n        <h3 className=\"activity-detail\">No current activity</h3>\n        <CustomStatus />\n      </div>\n    );\n\n  /**\n   * @param (activities) - Componentes to work on transition\n   * @param (timeTransition) {number} - timeouts of transition\n   */\n  function transitionStatus(activities = [], timeTransition = 0) {}\n  return (\n    <div className={`ds-activity ${dsStatus} discord-container`}>\n      {dsActivites ? (\n        <>\n          <div className=\"activity\">{dsSpotify && <Spotify />}</div>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default DiscordActivity;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}